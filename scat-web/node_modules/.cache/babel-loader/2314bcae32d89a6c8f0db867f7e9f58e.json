{"ast":null,"code":"export function checkData(data) {\n  if (data !== \"Blank\") {\n    if (data.length >= 1) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function convertNumber(num, isPercent) {\n  const billion = 1000000000;\n  const million = 1000000;\n  const thousand = 1000;\n  var rounded;\n  var fixed;\n\n  if (num >= billion) {\n    rounded = Math.round(num / billion * 10) / 10;\n    fixed = rounded.toFixed(1);\n    return fixed + \" B\";\n  } else if (num >= million) {\n    rounded = Math.round(num / million * 10) / 10;\n    fixed = rounded.toFixed(1);\n    return fixed + \" M\";\n  } else if (num >= thousand) {\n    rounded = Math.round(num / thousand * 10) / 10;\n    fixed = rounded.toFixed(1);\n    return fixed + \" K\";\n  } else {\n    rounded = Math.round(num * 10) / 10;\n    fixed = rounded.toFixed(1);\n\n    if (rounded > 0 && isPercent === true) {\n      fixed = \"+\" + fixed;\n    }\n\n    return fixed;\n  }\n}","map":{"version":3,"sources":["D:/Jobs here/GitHub/CE_Smart_Contract_Audit/scat-web/src/components/GlobalFunction.js"],"names":["checkData","data","length","convertNumber","num","isPercent","billion","million","thousand","rounded","fixed","Math","round","toFixed"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAwB;AAC3B,MAAGA,IAAI,KAAK,OAAZ,EAAoB;AAChB,QAAGA,IAAI,CAACC,MAAL,IAAe,CAAlB,EAAoB;AAChB,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;AAED,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA2BC,SAA3B,EAAqC;AACxC,QAAMC,OAAO,GAAG,UAAhB;AACA,QAAMC,OAAO,GAAG,OAAhB;AACA,QAAMC,QAAQ,GAAG,IAAjB;AAEA,MAAIC,OAAJ;AACA,MAAIC,KAAJ;;AACA,MAAGN,GAAG,IAAIE,OAAV,EAAkB;AACdG,IAAAA,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,GAAGE,OAAN,GAAgB,EAA3B,IAAiC,EAA3C;AACAI,IAAAA,KAAK,GAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR;AACA,WAAOH,KAAK,GAAG,IAAf;AACH,GAJD,MAKK,IAAGN,GAAG,IAAIG,OAAV,EAAkB;AACnBE,IAAAA,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,GAAGG,OAAN,GAAgB,EAA3B,IAAiC,EAA3C;AACAG,IAAAA,KAAK,GAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR;AACA,WAAOH,KAAK,GAAG,IAAf;AACH,GAJI,MAKA,IAAGN,GAAG,IAAII,QAAV,EAAmB;AACpBC,IAAAA,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,GAAGI,QAAN,GAAiB,EAA5B,IAAkC,EAA5C;AACAE,IAAAA,KAAK,GAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR;AACA,WAAOH,KAAK,GAAG,IAAf;AACH,GAJI,MAKD;AACAD,IAAAA,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,GAAG,EAAjB,IAAuB,EAAjC;AACAM,IAAAA,KAAK,GAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR;;AACA,QAAGJ,OAAO,GAAG,CAAV,IAAeJ,SAAS,KAAK,IAAhC,EAAqC;AACjCK,MAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AACD,WAAOA,KAAP;AACH;AACJ","sourcesContent":["export function checkData(data){\r\n    if(data !== \"Blank\"){\r\n        if(data.length >= 1){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function convertNumber(num,isPercent){\r\n    const billion = 1000000000;\r\n    const million = 1000000;\r\n    const thousand = 1000;\r\n\r\n    var rounded;\r\n    var fixed;\r\n    if(num >= billion){\r\n        rounded = Math.round(num / billion * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" B\";\r\n    }\r\n    else if(num >= million){\r\n        rounded = Math.round(num / million * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" M\";\r\n    }\r\n    else if(num >= thousand){\r\n        rounded = Math.round(num / thousand * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" K\";\r\n    }\r\n    else{\r\n        rounded = Math.round(num * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        if(rounded > 0 && isPercent === true){\r\n            fixed = \"+\" + fixed;\r\n        }\r\n        return fixed;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}