{"ast":null,"code":"export function checkData(data){if(data!==\"Blank\"&&data!==undefined){// if(data.length >= 1){\n//     return true;\n// }\nreturn true;}return false;}export function convertNumber(num,isPercent){var billion=1000000000;var million=1000000;var thousand=1000;var rounded;var fixed;if(num>=billion){rounded=Math.round(num/billion*10)/10;fixed=rounded.toFixed(1);return fixed+\" B\";}else if(num>=million){rounded=Math.round(num/million*10)/10;fixed=rounded.toFixed(1);return fixed+\" M\";}else if(num>=thousand){rounded=Math.round(num/thousand*10)/10;fixed=rounded.toFixed(1);return fixed+\" K\";}else{rounded=Math.round(num*10)/10;fixed=rounded.toFixed(1);if(rounded>0&&isPercent===true){fixed=\"+\"+fixed;}return fixed;}}","map":{"version":3,"sources":["D:/Jobs here/GitHub/CE_Smart_Contract_Audit/scat-web/src/components/GlobalFunction.js"],"names":["checkData","data","undefined","convertNumber","num","isPercent","billion","million","thousand","rounded","fixed","Math","round","toFixed"],"mappings":"AAAA,MAAO,SAASA,CAAAA,SAAT,CAAmBC,IAAnB,CAAwB,CAC3B,GAAGA,IAAI,GAAK,OAAT,EAAoBA,IAAI,GAAKC,SAAhC,CAA0C,CACtC;AACA;AACA;AACA,MAAO,KAAP,CACH,CACD,MAAO,MAAP,CACH,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBC,GAAvB,CAA2BC,SAA3B,CAAqC,CACxC,GAAMC,CAAAA,OAAO,CAAG,UAAhB,CACA,GAAMC,CAAAA,OAAO,CAAG,OAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAG,IAAjB,CAEA,GAAIC,CAAAA,OAAJ,CACA,GAAIC,CAAAA,KAAJ,CACA,GAAGN,GAAG,EAAIE,OAAV,CAAkB,CACdG,OAAO,CAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,CAAGE,OAAN,CAAgB,EAA3B,EAAiC,EAA3C,CACAI,KAAK,CAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR,CACA,MAAOH,CAAAA,KAAK,CAAG,IAAf,CACH,CAJD,IAKK,IAAGN,GAAG,EAAIG,OAAV,CAAkB,CACnBE,OAAO,CAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,CAAGG,OAAN,CAAgB,EAA3B,EAAiC,EAA3C,CACAG,KAAK,CAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR,CACA,MAAOH,CAAAA,KAAK,CAAG,IAAf,CACH,CAJI,IAKA,IAAGN,GAAG,EAAII,QAAV,CAAmB,CACpBC,OAAO,CAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,CAAGI,QAAN,CAAiB,EAA5B,EAAkC,EAA5C,CACAE,KAAK,CAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR,CACA,MAAOH,CAAAA,KAAK,CAAG,IAAf,CACH,CAJI,IAKD,CACAD,OAAO,CAAGE,IAAI,CAACC,KAAL,CAAWR,GAAG,CAAG,EAAjB,EAAuB,EAAjC,CACAM,KAAK,CAAGD,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAR,CACA,GAAGJ,OAAO,CAAG,CAAV,EAAeJ,SAAS,GAAK,IAAhC,CAAqC,CACjCK,KAAK,CAAG,IAAMA,KAAd,CACH,CACD,MAAOA,CAAAA,KAAP,CACH,CACJ","sourcesContent":["export function checkData(data){\r\n    if(data !== \"Blank\" && data !== undefined){\r\n        // if(data.length >= 1){\r\n        //     return true;\r\n        // }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function convertNumber(num,isPercent){\r\n    const billion = 1000000000;\r\n    const million = 1000000;\r\n    const thousand = 1000;\r\n\r\n    var rounded;\r\n    var fixed;\r\n    if(num >= billion){\r\n        rounded = Math.round(num / billion * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" B\";\r\n    }\r\n    else if(num >= million){\r\n        rounded = Math.round(num / million * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" M\";\r\n    }\r\n    else if(num >= thousand){\r\n        rounded = Math.round(num / thousand * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" K\";\r\n    }\r\n    else{\r\n        rounded = Math.round(num * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        if(rounded > 0 && isPercent === true){\r\n            fixed = \"+\" + fixed;\r\n        }\r\n        return fixed;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}