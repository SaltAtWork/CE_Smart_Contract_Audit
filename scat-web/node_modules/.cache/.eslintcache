[{"D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\index.js":"1","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\App.js":"2","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\ListTable.js":"3","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\InfoPage.js":"4","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\GlobalFunction.js":"5","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\ChartComponent.js":"6","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\LinkComponent.js":"7","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\AuditHistoryComponent.js":"8"},{"size":592,"mtime":1637822696607,"results":"9","hashOfConfig":"10"},{"size":3791,"mtime":1637828724220,"results":"11","hashOfConfig":"10"},{"size":1426,"mtime":1637824279993,"results":"12","hashOfConfig":"10"},{"size":8300,"mtime":1638190318639,"results":"13","hashOfConfig":"10"},{"size":1029,"mtime":1637820722543,"results":"14","hashOfConfig":"10"},{"size":4122,"mtime":1638437879905,"results":"15","hashOfConfig":"10"},{"size":1051,"mtime":1638437879905,"results":"16","hashOfConfig":"10"},{"size":1189,"mtime":1638189636980,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3775w9",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\index.js",[],["38","39"],"D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\App.js",["40","41","42","43","44"],"import './App.css';\r\nimport {useState,useEffect} from 'react';\r\nimport ListTable from './components/ListTable.js';\r\nimport InfoPage from './components/InfoPage';\r\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\r\nimport { ResponsiveContainer } from 'recharts';\r\nimport { checkData } from './components/GlobalFunction';\r\nimport \"@fontsource/mulish\";\r\n//import {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nconst Title =()=>{\r\n  return(\r\n    <div id=\"title\">\r\n      <h1>SCAT</h1>\r\n      <h2>SMART CONTRACT SECURITY AUDITING TEAM</h2>\r\n      <p>SCAT is our project to analyze DeFi projects risk and weakness in smart contract, while also provide\r\n        general risk analysis and risk factor data on the project\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FilterList = [\r\n  {id:\"All\",tag:\"All Projects\"},\r\n  {id:\"Lending\",tag:\"Lending Projects\"},\r\n  {id:\"Trading\",tag:\"Trading Projects\"},\r\n  {id:\"Asset\",tag:\"Asset Projects\"}\r\n]\r\n\r\nconst TableItemList = [\r\n  {\r\n    name:\"Alpha Homura\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"13/02/2021\",\r\n    usdTVL:\"$736.1M\",\r\n    usdTVLChanged:\"+0.78%\"\r\n  },\r\n  {\r\n    name:\"Curve Finance\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"13/02/2021\",\r\n    usdTVL:\"$640.8M\",\r\n    usdTVLChanged:\"-5.08%\"\r\n  },\r\n  {\r\n    name:\"Aave\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"14/09/2020\",\r\n    usdTVL:\"$14.9M\",\r\n    usdTVLChanged:\"+3.36%\"\r\n  },\r\n  {\r\n    name:\"Warp Finance\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"18/12/2020\",\r\n    usdTVL:\"$5.9M\",\r\n    usdTVLChanged:\"+3.57%\"\r\n  },\r\n  {\r\n    name:\"Balancer\",\r\n    category:\"Trading\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"28/06/2020\",\r\n    usdTVL:\"$1.92B\",\r\n    usdTVLChanged:\"+2.99%\"\r\n  },\r\n  {\r\n    name:\"Yearn Finance\",\r\n    category:\"Asset\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"06/02/2021\",\r\n    usdTVL:\"$4.47B\",\r\n    usdTVLChanged:\"+2.28%\"\r\n  },\r\n]\r\n\r\nfunction DeFiTable(props){\r\n  const {data} = props;\r\n  const [filter,setFilter] = useState(\"All\");\r\n  const [dataState,setDataState] = useState(false);\r\n\r\n  const changeFilter=(event)=>{\r\n    setFilter(event.target.id);\r\n  }\r\n\r\n  return(\r\n      <div>\r\n        <div id=\"filter\">\r\n          {FilterList.map((element)=>{\r\n            if(filter === element.id){\r\n              return <div className=\"active\" id={element.id} onClick={changeFilter}>{element.tag}</div>\r\n            }\r\n            return <div className=\"not-active\" id={element.id} onClick={changeFilter}>{element.tag}</div>\r\n          })}\r\n        </div>\r\n        <div id=\"defitable\">\r\n          <ListTable input={checkData(data) ? data : TableItemList} filter={filter} placeholder={checkData(data)}/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [data,setData] = useState(\"Blank\");\r\n  const [received,setReceived] = useState(false);\r\n  useEffect(() => {\r\n      if(!received){\r\n          fetch(\"http://127.0.0.1:4000/projects\")\r\n          .then(res => {\r\n            if(res.ok){\r\n              return res.json();\r\n            }\r\n            throw res;\r\n          })\r\n          .then((res) => {\r\n            setData(res);\r\n            setReceived(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error fetching data : \", error);\r\n            setData(\"Blank\");\r\n            setReceived(false);\r\n          })\r\n      }\r\n  })\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Title />\r\n            <DeFiTable data={data}/>\r\n          </Route>\r\n          <Route path=\"/info/:name\" component={InfoPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//<Filter />\r\n//<Table />\r\n/*<h1>\r\n              {JSON.stringify(data,null,2)}\r\n            </h1> */","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\ListTable.js",[],"D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\InfoPage.js",["45","46","47","48","49","50"],"import { useState,useEffect } from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport { convertNumber, checkData } from './GlobalFunction';\r\nimport ChartComponent from './ChartComponent';\r\nimport LinkComponent from './LinkComponent';\r\nimport AuditHistoryComponent from './AuditHistoryComponent';\r\n\r\nfunction TVLTable(props){\r\n    const {data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Total Value Locked\r\n            </h3>\r\n            <table>\r\n                <tr>\r\n                    <td id=\"head\">in USD</td>\r\n                    <td id=\"data\">$ {checkData(data) ? convertNumber(data[0].usdTVL,false) : \"xxx.x M\"}</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].usdTVLChanged,true) : \"+ x.x\"}%</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">in ETH</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].ethTVL,false) : \"xxx.x K\"} ETH</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].ethTVLChanged,true) : \"+ x.x\"}%</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">in BTC</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].btcTVL,false) : \"xxx.x K\"} BTC</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].btcTVLChanged,true) : \"+ x.x\"}%</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">ETH Locked</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].ethLocked,false) : \"xxx.x K\"} ETH</td>\r\n                    <td id=\"data\">+ x.x K ETH</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CreditComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Timestamps\r\n            </h3>\r\n            <table>\r\n                <tr>\r\n                    <td id=\"head\">Project Launch Date</td>\r\n                    <td id=\"data\">xx/xx/xxxx</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">Last Exploited</td>\r\n                    <td id=\"data\">{checkData(data) ? data[0].lastExploited : \"xx/xx/xxxx\"}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction DescriptionComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>{name}'s Description</h3>\r\n            {checkData(data) ? <p>{data[0].description}</p> : <p>No Description Available</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AnalysisComponent(props){\r\n    const {data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>Analysis</h3>\r\n            {checkData(data) ? <p>{data[0].riskAnalysis}</p> : <p>No Risk Analysis Available</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ExploitCaseComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>Exploited Case</h3>\r\n            <p>19 October 2021</p>\r\n            <t></t>\r\n            <p>&emsp;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction OurAnalysisComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>Smart Contract Auditing Result</h3>\r\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction InfoPage(props){\r\n    const name=props.match.params.name;\r\n    const history = useHistory();\r\n    const fetchLink = \"http://127.0.0.1:4000/projects/\" + name;\r\n    const [data,setData] = useState(\"Blank\");\r\n    const [received,setReceived] = useState(false);\r\n    useEffect(() => {\r\n        if(!received){\r\n            fetch(fetchLink)\r\n            .then(res => {\r\n              if(res.ok){\r\n                return res.json();\r\n              }\r\n              throw res;\r\n            })\r\n            .then((res) => {\r\n              setData(res);\r\n              setReceived(true);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching data : \", error);\r\n              setData(\"Blank\");\r\n              setReceived(false);\r\n            })\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"infotop\">\r\n                <h1 onClick={() => history.goBack()}>SCAT</h1>\r\n            </div>\r\n            <div id=\"infotitle\">\r\n                <h2>{name}</h2>\r\n                <h3>Key Statistic</h3>\r\n            </div>\r\n            <div class=\"infopage\">\r\n                <div class=\"infolist-a\">\r\n                    <TVLTable data={data} />\r\n                    <CreditComponent name={name} data={data} />\r\n                    <LinkComponent name={name} />\r\n                    <AuditHistoryComponent name={name} />\r\n                </div>\r\n                <div class=\"infolist-b\">\r\n                    <ChartComponent name={name} />\r\n                    <DescriptionComponent name={name} data={data} />\r\n                    <AnalysisComponent data={data} />\r\n                    <ExploitCaseComponent name={name} data={data} />\r\n                    <OurAnalysisComponent name={name} data={data} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoPage;\r\n\r\n/*  Exploited Case Placeholder\r\n            <p>19 October 2021</p>\r\n            <t></t>\r\n            <p>&emsp;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n\r\n            <p><a href=\"#\">{name} 1st Exploit</a></p>\r\n            <p><a href=\"#\">{name} Lab</a></p>\r\n            <p><a href=\"https://www.twitter.com\">Twitter</a></p>\r\n\r\n            */\r\n           /*const chartData = [\r\n        {timestamp: 'A', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'B', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'C', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'D', usd: 3000, eth: 4200, btc: 1200},\r\n        {timestamp: 'E', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'F', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'G', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'H', usd: 3000, eth: 4200, btc: 1200},\r\n        {timestamp: 'I', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'J', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'K', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'L', usd: 3000, eth: 4200, btc: 1200},\r\n        {timestamp: 'M', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'N', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'O', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'P', usd: 3000, eth: 4200, btc: 1200},\r\n    ];*/","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\GlobalFunction.js",[],"D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\ChartComponent.js",["51","52","53"],"import { useState,useEffect } from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { checkData,convertNumber } from './GlobalFunction';\r\n\r\nfunction CustomTooltip(props){\r\n    const {active,payload,label,currency} = props;\r\n    if (active && payload && payload.length) {\r\n        var date = new Date(label*1000);\r\n        date = date.toLocaleString('th-TH',{dateStyle: 'medium', timeStyle: 'medium'});\r\n        return (\r\n          <div className=\"tooltip\">\r\n            <p>{`${date} : `}</p>\r\n            <p>{`${currency.toUpperCase()} : ${convertNumber(payload[0].value)}`}</p>\r\n          </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction ChartComponent(props){\r\n    const {name} = props;\r\n    const [currency,setCurrency] = useState(\"usd\");\r\n    const [range,setRange] = useState(7);\r\n    var projectName = name.replace(/\\s+/g, '-').toLowerCase();\r\n    const [chartData,setChartData] = useState(\"Blank\");\r\n    useEffect(() => {\r\n        if(true){\r\n            fetch(\"http://127.0.0.1:4000/TVLHistory/history/\" + projectName)\r\n            .then(res => {\r\n              if(res.ok){\r\n                return res.json();\r\n              }\r\n              throw res;\r\n            })\r\n            .then((res) => {\r\n              setChartData(res);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching data : \", error);\r\n              setChartData(\"Blank\");\r\n            })\r\n        }\r\n    })\r\n    var FilteredData = chartData.slice(0, range);\r\n\r\n    const changeCurrency=(event)=>{\r\n        setCurrency(event.target.id);\r\n    }\r\n\r\n    const changeRange=(event)=>{\r\n        setRange(event.target.id);\r\n        if(range != \"All\"){\r\n            FilteredData = chartData.slice(chartData.length - range);\r\n        }\r\n        else{\r\n            FilteredData = chartData;\r\n        }\r\n    }\r\n\r\n    const checkCurrency=(id)=>{\r\n        if(currency == id){\r\n            return \"active\";\r\n        }\r\n        else{\r\n            return \"not-active\";\r\n        }\r\n    }\r\n\r\n    const checkRange=(id)=>{\r\n        if(range == id){\r\n            return \"active\";\r\n        }\r\n        else{\r\n            return \"not-active\";\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Chart\r\n            </h3>\r\n            <p class=\"chart_left\">\r\n                <span class={checkCurrency(\"usd\")} id=\"usd\" onClick={changeCurrency}>USD</span>\r\n                <span> | </span>\r\n                <span class={checkCurrency(\"eth\")} id=\"eth\" onClick={changeCurrency}>ETH</span>\r\n                <span> | </span>\r\n                <span class={checkCurrency(\"btc\")} id=\"btc\" onClick={changeCurrency}>BTC</span>\r\n            </p>\r\n            <p class=\"chart_right\">\r\n                <span class={checkRange(365)} onClick={changeRange} id={365}>1 Year</span>\r\n                <span> | </span>\r\n                <span class={checkRange(90)} onClick={changeRange} id={90}>3 Months</span>\r\n                <span> | </span>\r\n                <span class={checkRange(30)} onClick={changeRange} id={30}>1 Month</span>\r\n                <span> | </span>\r\n                <span class={checkRange(7)} onClick={changeRange} id={7}>1 Week</span>\r\n            </p>\r\n            <p></p>\r\n            <p></p>\r\n            <div>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n                <LineChart margin={{left: 10, bottom: 10, right: 10}} data={checkData(FilteredData) ? FilteredData.reverse() : []}>\r\n                    <Line type=\"linear\" dataKey={currency} stroke=\"#8884d8\" />\r\n                    <CartesianGrid stroke=\"#ccc\" vertical={false}/>\r\n                    <Tooltip content={<CustomTooltip currency={currency}/>}/>\r\n                    <XAxis dataKey=\"timestamp\" hide={true}/>\r\n                    <YAxis domain={['auto','auto']} tickFormatter={tick => {\r\n                        return convertNumber(tick);\r\n                    }}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartComponent;","D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\LinkComponent.js",[],"D:\\Jobs here\\GitHub\\CE_Smart_Contract_Audit\\scat-web\\src\\components\\AuditHistoryComponent.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":26,"nodeType":"60","messageId":"61","endLine":5,"endColumn":32},{"ruleId":"58","severity":1,"message":"62","line":5,"column":46,"nodeType":"60","messageId":"61","endLine":5,"endColumn":50},{"ruleId":"58","severity":1,"message":"63","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":29},{"ruleId":"58","severity":1,"message":"64","line":85,"column":10,"nodeType":"60","messageId":"61","endLine":85,"endColumn":19},{"ruleId":"58","severity":1,"message":"65","line":85,"column":20,"nodeType":"60","messageId":"61","endLine":85,"endColumn":32},{"ruleId":"58","severity":1,"message":"62","line":2,"column":9,"nodeType":"60","messageId":"61","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"66","line":42,"column":12,"nodeType":"60","messageId":"61","endLine":42,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":84,"column":12,"nodeType":"60","messageId":"61","endLine":84,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":84,"column":17,"nodeType":"60","messageId":"61","endLine":84,"endColumn":21},{"ruleId":"58","severity":1,"message":"66","line":97,"column":12,"nodeType":"60","messageId":"61","endLine":97,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":97,"column":17,"nodeType":"60","messageId":"61","endLine":97,"endColumn":21},{"ruleId":"68","severity":1,"message":"69","line":52,"column":18,"nodeType":"70","messageId":"71","endLine":52,"endColumn":20},{"ruleId":"68","severity":1,"message":"72","line":61,"column":21,"nodeType":"70","messageId":"71","endLine":61,"endColumn":23},{"ruleId":"68","severity":1,"message":"72","line":70,"column":18,"nodeType":"70","messageId":"71","endLine":70,"endColumn":20},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ResponsiveContainer' is defined but never used.","'dataState' is assigned a value but never used.","'setDataState' is assigned a value but never used.","'name' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]