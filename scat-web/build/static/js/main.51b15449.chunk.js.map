{"version":3,"sources":["components/GlobalFunction.js","components/ListTable.js","components/ChartComponent.js","components/LinkComponent.js","components/AuditHistoryComponent.js","components/InfoPage.js","App.js","index.js"],"names":["checkData","data","undefined","convertNumber","num","isPercent","rounded","fixed","billion","million","Math","round","toFixed","TableRow","props","input","placeholder","history","useHistory","onClick","push","name","category","chain","lastExploited","usdTVL","usdTVLChanged","TableHeadRow","ListTable","filter","map","element","normalCategory","i","length","checkCategory","CustomTooltip","active","payload","label","currency","date","Date","toLocaleString","dateStyle","timeStyle","className","toUpperCase","value","ChartComponent","useState","setCurrency","range","setRange","projectName","replace","toLowerCase","chartData","setChartData","useEffect","fetch","then","res","ok","json","catch","error","console","log","FilteredData","slice","changeCurrency","event","target","id","changeRange","checkCurrency","checkRange","class","ResponsiveContainer","width","height","LineChart","margin","left","bottom","right","reverse","Line","type","dataKey","stroke","CartesianGrid","vertical","Tooltip","content","XAxis","hide","YAxis","domain","tickFormatter","tick","LinkComponent","setData","href","linkAddress","description","AuditHistoryComponent","received","setReceived","TVLTable","ethTVL","ethTVLChanged","btcTVL","btcTVLChanged","ethLocked","CreditComponent","launchDate","DescriptionComponent","AnalysisComponent","count","riskAnalysis","split","item","key","ExploitCaseComponent","attackHistory","OurAnalysisComponent","result","InfoPage","match","params","fetchLink","document","title","goBack","ratingValue","rating","fillColorArray","readonly","fullIcon","size","emptyIcon","Title","FilterList","tag","TableItemList","DeFiTable","setFilter","changeFilter","App","path","exact","component","ReactDOM","render","StrictMode","baseName","process","forceRefresh","getElementById"],"mappings":"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","file":"static/js/main.51b15449.chunk.js","sourcesContent":["export function checkData(data){\r\n    if(data !== \"Blank\" && data !== undefined && data !== \"N/A\"){\r\n        // if(data.length >= 1){\r\n        //     return true;\r\n        // }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function convertNumber(num,isPercent){\r\n    const billion = 1000000000;\r\n    const million = 1000000;\r\n    const thousand = 1000;\r\n\r\n    var rounded;\r\n    var fixed;\r\n    if(num >= billion){\r\n        rounded = Math.round(num / billion * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" B\";\r\n    }\r\n    else if(num >= million){\r\n        rounded = Math.round(num / million * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" M\";\r\n    }\r\n    else if(num >= thousand){\r\n        rounded = Math.round(num / thousand * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        return fixed + \" K\";\r\n    }\r\n    else{\r\n        rounded = Math.round(num * 10) / 10;\r\n        fixed = rounded.toFixed(1);\r\n        if(rounded > 0 && isPercent === true){\r\n            fixed = \"+\" + fixed;\r\n        }\r\n        return fixed;\r\n    }\r\n}","import { useHistory } from 'react-router-dom';\r\nimport { convertNumber } from './GlobalFunction';\r\n\r\nfunction TableRow(props){\r\n  const {input,placeholder} = props;\r\n  const history = useHistory();\r\n  const handleClick=()=>{\r\n    history.push('/info/' + input.name);\r\n  }\r\n\r\n  return(\r\n    <tr onClick={handleClick}>\r\n      <td>{input.name}</td>\r\n      <td>{input.category}</td>\r\n      <td>{input.chain}</td>\r\n      <td>{input.lastExploited}</td>\r\n      <td>{!placeholder ? input.usdTVL : \"$ \" + convertNumber(input.usdTVL,false)}</td>\r\n      <td>{!placeholder ? input.usdTVLChanged : convertNumber(input.usdTVLChanged,true) + \" %\"}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction TableHeadRow(){\r\n  return(\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Category</th>\r\n      <th>Chain</th>\r\n      <th>Last Exploit</th>\r\n      <th>Locked(USD)</th>\r\n      <th>%Change</th>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction checkCategory(props){\r\n  const normalCategory = [\"Lending\",\"Trading\",\"Assets\"];\r\n  for(let i = 0; i < normalCategory.length; i++){\r\n    if(props === normalCategory[i]){\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction ListTable(props){\r\n    const {input,filter,placeholder} = props;\r\n    return(\r\n        <table>\r\n          <TableHeadRow />\r\n          {input.map((element)=>{\r\n            if(filter === \"All\"){\r\n              return <TableRow input={element} placeholder={placeholder} />\r\n            }\r\n            else if(filter === element.category){\r\n              return <TableRow input={element} placeholder={placeholder} />\r\n            }\r\n            else if(filter === \"Others\" && checkCategory(element.category)){\r\n              return <TableRow input={element} placeholder={placeholder} />\r\n            }\r\n            return null;\r\n          })}\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ListTable\r\n\r\n/* \r\n\r\n*/","import { useState,useEffect } from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { checkData,convertNumber } from './GlobalFunction';\r\n\r\nfunction CustomTooltip(props){\r\n    const {active,payload,label,currency} = props;\r\n    if (active && payload && payload.length) {\r\n        var date = new Date(label*1000);\r\n        date = date.toLocaleString('th-TH',{dateStyle: 'medium', timeStyle: 'medium'});\r\n        return (\r\n          <div className=\"tooltip\">\r\n            <p>{`${date} : `}</p>\r\n            <p>{`${currency.toUpperCase()} : ${convertNumber(payload[0].value)}`}</p>\r\n          </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction ChartComponent(props){\r\n    const {name} = props;\r\n    const [currency,setCurrency] = useState(\"usd\");\r\n    const [range,setRange] = useState(7);\r\n    var projectName = name.replace(/\\s+/g, '-').toLowerCase();\r\n    const [chartData,setChartData] = useState(\"Blank\");\r\n    useEffect(() => {\r\n        if(true){\r\n            fetch(\"https://scat-api.herokuapp.com/TVLHistory/history/\" + projectName)\r\n            .then(res => {\r\n              if(res.ok){\r\n                return res.json();\r\n              }\r\n              throw res;\r\n            })\r\n            .then((res) => {\r\n              setChartData(res);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching data : \", error);\r\n              setChartData(\"Blank\");\r\n            })\r\n        }\r\n    })\r\n    var FilteredData = chartData.slice(0, range);\r\n\r\n    const changeCurrency=(event)=>{\r\n        setCurrency(event.target.id);\r\n    }\r\n\r\n    const changeRange=(event)=>{\r\n        setRange(event.target.id);\r\n        if(range != \"All\"){\r\n            FilteredData = chartData.slice(chartData.length - range);\r\n        }\r\n        else{\r\n            FilteredData = chartData;\r\n        }\r\n    }\r\n\r\n    const checkCurrency=(id)=>{\r\n        if(currency == id){\r\n            return \"active\";\r\n        }\r\n        else{\r\n            return \"not-active\";\r\n        }\r\n    }\r\n\r\n    const checkRange=(id)=>{\r\n        if(range == id){\r\n            return \"active\";\r\n        }\r\n        else{\r\n            return \"not-active\";\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Chart\r\n            </h3>\r\n            <p class=\"chart_left\">\r\n                <span class={checkCurrency(\"usd\")} id=\"usd\" onClick={changeCurrency}>USD</span>\r\n                <span> | </span>\r\n                <span class={checkCurrency(\"eth\")} id=\"eth\" onClick={changeCurrency}>ETH</span>\r\n                <span> | </span>\r\n                <span class={checkCurrency(\"btc\")} id=\"btc\" onClick={changeCurrency}>BTC</span>\r\n            </p>\r\n            <p class=\"chart_right\">\r\n                <span class={checkRange(365)} onClick={changeRange} id={365}>1 Year</span>\r\n                <span> | </span>\r\n                <span class={checkRange(90)} onClick={changeRange} id={90}>3 Months</span>\r\n                <span> | </span>\r\n                <span class={checkRange(30)} onClick={changeRange} id={30}>1 Month</span>\r\n                <span> | </span>\r\n                <span class={checkRange(7)} onClick={changeRange} id={7}>1 Week</span>\r\n            </p>\r\n            <p></p>\r\n            <p></p>\r\n            <div class=\"padbottom\">\r\n            {!checkData(chartData) ? <h4 class=\"centerh3\">No Chart Available</h4> : <ResponsiveContainer width=\"100%\" height={300}>\r\n                <LineChart margin={{left: 10, bottom: 10, right: 10}} data={checkData(FilteredData) ? FilteredData.reverse() : []}>\r\n                    <Line type=\"linear\" dataKey={currency} stroke=\"#8884d8\" />\r\n                    <CartesianGrid stroke=\"#ccc\" vertical={false}/>\r\n                    <Tooltip content={<CustomTooltip currency={currency}/>}/>\r\n                    <XAxis dataKey=\"timestamp\" hide={true}/>\r\n                    <YAxis domain={['auto','auto']} tickFormatter={tick => {\r\n                        return convertNumber(tick);\r\n                    }}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartComponent;","import { useState,useEffect } from 'react';\r\nimport { checkData } from './GlobalFunction';\r\n\r\nfunction LinkComponent(props){\r\n    const {name} = props;\r\n    const [data,setData] = useState(\"Blank\");\r\n    useEffect(() => {\r\n        if(true){\r\n            fetch(\"https://scat-api.herokuapp.com/ecosystems/\" + name)\r\n            .then(res => {\r\n              if(res.ok){\r\n                return res.json();\r\n              }\r\n              throw res;\r\n            })\r\n            .then((res) => {\r\n              setData(res);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching data : \", error);\r\n              setData(\"Blank\");\r\n            })\r\n        }\r\n    })\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Project's Links\r\n            </h3>\r\n            {!checkData(data) ? <p>No Link Available</p> : data.map((element)=>{\r\n                return <p><a href={element.linkAddress}>{element.description}</a></p>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinkComponent;","import { useState,useEffect } from 'react';\r\nimport { checkData } from './GlobalFunction';\r\n\r\nfunction AuditHistoryComponent(props){\r\n    const {name} = props;\r\n    const [data,setData] = useState(\"Blank\");\r\n    const [received,setReceived] = useState(false);\r\n    useEffect(() => {\r\n        if(!received){\r\n            fetch(\"https://scat-api.herokuapp.com/audits/\" + name)\r\n            .then(res => {\r\n              if(res.ok){\r\n                return res.json();\r\n              }\r\n              throw res;\r\n            })\r\n            .then((res) => {\r\n              setData(res);\r\n              setReceived(true);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching data : \", error);\r\n              setData(\"Blank\");\r\n              setReceived(false);\r\n            })\r\n        }\r\n    })\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Audit History\r\n            </h3>\r\n            {!checkData(data) ? <p>No Audit Available</p> : data.map((element)=>{\r\n                return <p><a href={element.linkAddress}>{element.description}</a></p>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuditHistoryComponent;","import { useState,useEffect } from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport { convertNumber, checkData } from './GlobalFunction';\r\nimport ChartComponent from './ChartComponent';\r\nimport LinkComponent from './LinkComponent';\r\nimport AuditHistoryComponent from './AuditHistoryComponent';\r\nimport { Rating } from 'react-simple-star-rating';\r\nimport {GiDeathSkull} from 'react-icons/gi';\r\n\r\nfunction TVLTable(props){\r\n    const {data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Total Value Locked\r\n            </h3>\r\n            <table>\r\n                <tr>\r\n                    <td id=\"head\">in USD</td>\r\n                    <td id=\"data\">{checkData(data[0].usdTVL) ? \"$\" + convertNumber(data[0].usdTVL,false) : \"N/A\"}</td>\r\n                    <td id=\"data\">{checkData(data[0].usdTVLChanged) ? convertNumber(data[0].usdTVLChanged,true) + \"%\" : \"N/A\"}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">in ETH</td>\r\n                    <td id=\"data\">{checkData(data[0].ethTVL) ? convertNumber(data[0].ethTVL,false) + \" ETH\" : \"N/A\"}</td>\r\n                    <td id=\"data\">{checkData(data[0].ethTVLChanged) ? convertNumber(data[0].ethTVLChanged,true) + \"%\" : \"+ x.x\"}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">in BTC</td>\r\n                    <td id=\"data\">{checkData(data[0].btcTVL) ? convertNumber(data[0].btcTVL,false) + \" BTC\" : \"N/A\"}</td>\r\n                    <td id=\"data\">{checkData(data[0].btcTVLChanged) ? convertNumber(data[0].btcTVLChanged,true) + \"%\" : \"+ x.x\"}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">ETH Locked</td>\r\n                    <td id=\"data\">{checkData(data) ? convertNumber(data[0].ethLocked,false) + \" ETH\" : \"N/A\"}</td>\r\n                    <td id=\"data\">N/A</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CreditComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>\r\n                Timestamps\r\n            </h3>\r\n            <table>\r\n                <tr>\r\n                    <td id=\"head\">Project Launch Date</td>\r\n                    <td id=\"data\">{checkData(data[0].launchDate) ? data[0].launchDate : \"N/A\"}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td id=\"head\">Last Exploited</td>\r\n                    <td id=\"data\">{checkData(data[0].lastExploited) ? data[0].lastExploited : \"N/A\"}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction DescriptionComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>{name}'s Description</h3>\r\n            {checkData(data[0].description) ? <p>{data[0].description}</p> : <p>No description available</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AnalysisComponent(props){\r\n    const {data} = props;\r\n    let count = 0;\r\n    let id = \"\";\r\n    //{checkData(data[0].riskAnalysis) ? <p>{JSON.parse(data[0].riskAnalysis)}</p> : <p>No risk analysis available</p>}\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>Analysis</h3>\r\n            {checkData(data[0].riskAnalysis) ? \r\n            data[0].riskAnalysis.split('\\n').map(function(item, key) {\r\n                if(count%2 == 0){\r\n                    id = \"b\";\r\n                }\r\n                else{\r\n                    id = \"a\";\r\n                }\r\n                count++;\r\n                return (\r\n                  <p class={id} key={key}>\r\n                    {item}\r\n                  </p>\r\n                )\r\n              })\r\n            : <p>No risk analysis available</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ExploitCaseComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>Attack History</h3>\r\n            {checkData(data[0].attackHistory) ? \r\n            data[0].attackHistory.split('\\n').map(function(item, key) {\r\n                return (\r\n                  <p key={key}>\r\n                    {item}\r\n                  </p>\r\n                )\r\n              })\r\n            : <p>No attack history available</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction OurAnalysisComponent(props){\r\n    const {name,data} = props;\r\n    return(\r\n        <div class=\"infoitem\">\r\n            <h3>Result From Our Scanner</h3>\r\n            {checkData(data[0].result) ? \r\n            data[0].result.split('\\n').map(function(item, key) {\r\n                return (\r\n                  <span class=\"infobox\" key={key}>\r\n                    {item}\r\n                    <br/>\r\n                  </span>\r\n                )\r\n              })\r\n            : <p>No result available</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction InfoPage(props){\r\n    const name=props.match.params.name;\r\n    const history = useHistory();\r\n    const fetchLink = \"https://scat-api.herokuapp.com/projects/\" + name;\r\n    const [data,setData] = useState(\"Blank\");\r\n    const [received,setReceived] = useState(false);\r\n    useEffect(() => {\r\n        if(!received){\r\n            fetch(fetchLink)\r\n            .then(res => {\r\n              if(res.ok){\r\n                return res.json();\r\n              }\r\n              throw res;\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n              setData(res);\r\n              setReceived(true);\r\n              document.title = name + \" - SCAT\";\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching data : \", error);\r\n              setData(\"Blank\");\r\n              setReceived(false);\r\n              document.title = name + \" - SCAT\";\r\n            })\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"infotop\">\r\n                <h1 onClick={() => history.goBack()}>SCAT</h1>\r\n            </div>\r\n            <div class=\"infopage\">\r\n                <div class=\"infolist-c\">\r\n                    <h1>{name}</h1>\r\n                    <h3>Key Statistic</h3>\r\n                </div>\r\n                <div class=\"infolist-d\">\r\n                    <Rating ratingValue={checkData(data[0].rating) ? data[0].rating : 0} fillColorArray={['#008c1c','#00FF00','#FFFF00','#FF7F00','#FF0000',]} readonly={true} fullIcon={<GiDeathSkull size={30} />} emptyIcon={<GiDeathSkull size={30} />} />\r\n                    {checkData(data[0].rating) ? <h3 class=\"righth3\">Rating : {data[0].rating/20}/5</h3> : <h3 class=\"righth3\">No Rating</h3>}\r\n                </div>\r\n            </div>\r\n            <div class=\"infopage\">\r\n                <div class=\"infolist-a\">\r\n                    <TVLTable data={data} />\r\n                    <CreditComponent name={name} data={data} />\r\n                    <LinkComponent name={name} />\r\n                    <AuditHistoryComponent name={name} />\r\n                </div>\r\n                <div class=\"infolist-b\">\r\n                    <ChartComponent name={name} />\r\n                    <DescriptionComponent name={name} data={data} />\r\n                    <ExploitCaseComponent name={name} data={data} />\r\n                    <OurAnalysisComponent name={name} data={data} />\r\n                    <AnalysisComponent data={data} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoPage;\r\n\r\n/*  Exploited Case Placeholder\r\n            <p>19 October 2021</p>\r\n            <t></t>\r\n            <p>&emsp;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n\r\n            <p><a href=\"#\">{name} 1st Exploit</a></p>\r\n            <p><a href=\"#\">{name} Lab</a></p>\r\n            <p><a href=\"https://www.twitter.com\">Twitter</a></p>\r\n\r\n            */\r\n           /*const chartData = [\r\n        {timestamp: 'A', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'B', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'C', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'D', usd: 3000, eth: 4200, btc: 1200},\r\n        {timestamp: 'E', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'F', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'G', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'H', usd: 3000, eth: 4200, btc: 1200},\r\n        {timestamp: 'I', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'J', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'K', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'L', usd: 3000, eth: 4200, btc: 1200},\r\n        {timestamp: 'M', usd: 4000, eth: 2400, btc: 2200},\r\n        {timestamp: 'N', usd: 8000, eth: 1000, btc: 2100},\r\n        {timestamp: 'O', usd: 6000, eth: 2400, btc: 2400},\r\n        {timestamp: 'P', usd: 3000, eth: 4200, btc: 1200},\r\n    ];*/","import './App.css';\r\nimport {useState,useEffect} from 'react';\r\nimport ListTable from './components/ListTable.js';\r\nimport InfoPage from './components/InfoPage';\r\nimport {HashRouter as Router,Switch,Route,Link} from 'react-router-dom'\r\nimport { ResponsiveContainer } from 'recharts';\r\nimport { checkData } from './components/GlobalFunction';\r\nimport \"@fontsource/mulish\";\r\n//import {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nconst Title =()=>{\r\n  return(\r\n    <div id=\"title\">\r\n      <h1>SCAT</h1>\r\n      <h2>SMART CONTRACT SECURITY AUDITING TEAM</h2>\r\n      <p>SCAT is our project to analyze DeFi projects risk and weakness in smart contract, while also provide\r\n        general risk analysis and risk factor data on the project\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FilterList = [\r\n  {id:\"All\",tag:\"All Projects\"},\r\n  {id:\"Lending\",tag:\"Lending Projects\"},\r\n  {id:\"Trading\",tag:\"Trading Projects\"},\r\n  {id:\"Assets\",tag:\"Assets Projects\"},\r\n  {id:\"Others\",tag:\"Other Projects\"}\r\n]\r\n\r\nconst TableItemList = [\r\n  {\r\n    name:\"Alpha Homura\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"13/02/2021\",\r\n    usdTVL:\"$736.1M\",\r\n    usdTVLChanged:\"+0.78%\"\r\n  },\r\n  {\r\n    name:\"Curve Finance\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"13/02/2021\",\r\n    usdTVL:\"$640.8M\",\r\n    usdTVLChanged:\"-5.08%\"\r\n  },\r\n  {\r\n    name:\"Aave\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"14/09/2020\",\r\n    usdTVL:\"$14.9M\",\r\n    usdTVLChanged:\"+3.36%\"\r\n  },\r\n  {\r\n    name:\"Warp Finance\",\r\n    category:\"Lending\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"18/12/2020\",\r\n    usdTVL:\"$5.9M\",\r\n    usdTVLChanged:\"+3.57%\"\r\n  },\r\n  {\r\n    name:\"Balancer\",\r\n    category:\"Trading\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"28/06/2020\",\r\n    usdTVL:\"$1.92B\",\r\n    usdTVLChanged:\"+2.99%\"\r\n  },\r\n  {\r\n    name:\"Yearn Finance\",\r\n    category:\"Asset\",\r\n    chain:\"Ethereum\",\r\n    lastExploited:\"06/02/2021\",\r\n    usdTVL:\"$4.47B\",\r\n    usdTVLChanged:\"+2.28%\"\r\n  },\r\n]\r\n\r\nfunction DeFiTable(props){\r\n  const {data} = props;\r\n  const [filter,setFilter] = useState(\"All\");\r\n  const [dataState,setDataState] = useState(false);\r\n\r\n  const changeFilter=(event)=>{\r\n    setFilter(event.target.id);\r\n  }\r\n\r\n  return(\r\n      <div>\r\n        <div id=\"filter\">\r\n          {FilterList.map((element)=>{\r\n            if(filter === element.id){\r\n              return <div className=\"active\" id={element.id} onClick={changeFilter}>{element.tag}</div>\r\n            }\r\n            return <div className=\"not-active\" id={element.id} onClick={changeFilter}>{element.tag}</div>\r\n          })}\r\n        </div>\r\n        <div id=\"defitable\">\r\n          <ListTable input={checkData(data) ? data : TableItemList} filter={filter} placeholder={checkData(data)}/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [data,setData] = useState(\"Blank\");\r\n  const [received,setReceived] = useState(false);\r\n  useEffect(() => {\r\n      if(!received){\r\n          fetch(\"https://scat-api.herokuapp.com/projects\")\r\n          .then(res => {\r\n            if(res.ok){\r\n              return res.json();\r\n            }\r\n            throw res;\r\n          })\r\n          .then((res) => {\r\n            setData(res);\r\n            setReceived(true);\r\n            document.title = \"SCAT\";\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error fetching data : \", error);\r\n            setData(\"Blank\");\r\n            setReceived(false);\r\n            document.title = \"SCAT - Database Offline\";\r\n          })\r\n      }\r\n  })\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Title />\r\n            <DeFiTable data={data}/>\r\n          </Route>\r\n          <Route path=\"/info/:name\" component={InfoPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n//import reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\r\nimport \"@fontsource/mulish\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter baseName={process.env.PUBLIC_URL} forceRefresh={true}>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}